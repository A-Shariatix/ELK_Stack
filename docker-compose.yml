name: elk-setup
services:
  db:
    container_name: elastic
    image: elasticsearch:9.1.0
    ports:
      - "9200:9200"
    networks:
      - project
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTICSEARCH_DEFAULT_USER_PASSWORD}
      - ES_JAVA_OPTS=${ELASTICSEARCH_JVM_OPTS}
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.keystore.path=/usr/share/elasticsearch/config/elasticsearch/elasticsearch.p12
      - xpack.security.http.ssl.certificate_authorities=/usr/share/elasticsearch/config/elasticsearch/ca.crt
      - xpack.security.http.ssl.client_authentication=${ELASTICSEARCH_CLIENT_AUTH_LEVEL}
    volumes:
#      - kibana_cert:/usr/share/elasticsearch/kibana
#      - elastic_cert:/usr/share/elasticsearch/elasticsearch
#      - fleet_cert:/usr/share/elasticsearch/fleet
      - es_config:/usr/share/elasticsearch/config
      - es_data:/usr/share/elasticsearch/data
      - ./certs/elasticsearch:/usr/share/elasticsearch/config/elasticsearch
      - ./certs:/usr/share/elasticsearch/ca
  visualizer:
    container_name: kibana
    ports:
      - "5601:5601"
    image: kibana:9.1.0
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOST}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=/usr/share/kibana/config/kibana/ca.crt
      - SERVER_SSL_ENABLED=true
      - SERVER_SSL_CERTIFICATE=/usr/share/kibana/config/kibana/kibana.crt
      - SERVER_SSL_KEY=/usr/share/kibana/config/kibana/kibana.key
      - SERVER_SSL_KEY_PASSPHRASE=${KIBANA_SERVER_SSL_KEY_PASSPHRASE}
      - ELASTICSEARCH_USERNAME=${KIBANA_ELASTIC_USERNAME}
      - ELASTICSEARCH_PASSWORD=${KIBANA_ELASTIC_PASSWORD}
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=${KIBANA_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY}
    depends_on:
      - db
    volumes:
#      - /kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
      - ./certs/kibana:/usr/share/kibana/config/kibana
    networks:
      - project
  agent_manager_1:
    container_name: fleet_1
    image: elastic/elastic-agent:9.1.0
    environment:
      - FLEET_SERVER_ENABLE=1
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST}
      - FLEET_SERVER_CERT=/usr/share/elastic-agent/fleet/fleet.crt
      - FLEET_SERVER_CERT_KEY=/usr/share/elastic-agent/fleet/fleet.key
      - FLEET_SERVER_SSL_KEY_PASSPHRASE=${FLEET_SERVER_SSL_KEY_PASSPHRASE}
#      - FLEET_SERVER_ELASTICSEARCH_CA=/usr/share/elastic-agent/fleet/ca.crt
      - FLEET_SERVER_ELASTICSEARCH_CA_TRUSTED_FINGERPRINT=${FINGERPRINT}
      - FLEET_SERVER_SERVICE_TOKEN=${FLEET_1_SERVICE_TOKEN}
      - FLEET_SERVER_POLICY_ID=fleet-server-policy
      - FLEET_SERVER_HOST=0.0.0.0
      - FLEET_SERVER_PORT=8220
      - FLEET_URL=${FLEET_1_URL}
      - FLEET_CA=/usr/share/elastic-agent/fleet/ca.crt
      - FLEET_SERVER_TIMEOUT=${FLEET_SERVER_TIMEOUT}
    ports:
      - "8220:8220"
    depends_on:
      - visualizer
      - db
    volumes:
      - ./certs/fleet:/usr/share/elastic-agent/fleet
    networks:
      - project
  agent_manager_2:
    container_name: fleet_2
    image: elastic/elastic-agent:9.1.0
    environment:
      - FLEET_SERVER_ENABLE=1
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST}
      - FLEET_SERVER_CERT=/usr/share/elastic-agent/fleet/fleet.crt
      - FLEET_SERVER_CERT_KEY=/usr/share/elastic-agent/fleet/fleet.key
      - FLEET_SERVER_SSL_KEY_PASSPHRASE=${FLEET_SERVER_SSL_KEY_PASSPHRASE}
#      - FLEET_SERVER_ELASTICSEARCH_CA=/usr/share/elastic-agent/fleet/ca.crt
      - FLEET_SERVER_ELASTICSEARCH_CA_TRUSTED_FINGERPRINT=${FINGERPRINT}
      - FLEET_SERVER_SERVICE_TOKEN=${FLEET_2_SERVICE_TOKEN}
      - FLEET_SERVER_POLICY_ID=fleet-server-policy
      - FLEET_SERVER_HOST=0.0.0.0
      - FLEET_SERVER_PORT=8220
      - FLEET_URL=${FLEET_2_URL}
      - FLEET_CA=/usr/share/elastic-agent/fleet/ca.crt
      - FLEET_SERVER_TIMEOUT=${FLEET_SERVER_TIMEOUT}
    ports:
      - "8221:8220"
    depends_on:
      - visualizer
      - db
    volumes:
      - ./certs/fleet:/usr/share/elastic-agent/fleet
    networks:
      - project
  agent_manager_3:
    container_name: fleet_3
    image: elastic/elastic-agent:9.1.0
    environment:
      - FLEET_SERVER_ENABLE=1
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST}
      - FLEET_SERVER_CERT=/usr/share/elastic-agent/fleet/fleet.crt
      - FLEET_SERVER_CERT_KEY=/usr/share/elastic-agent/fleet/fleet.key
      - FLEET_SERVER_SSL_KEY_PASSPHRASE=${FLEET_SERVER_SSL_KEY_PASSPHRASE}
#     - FLEET_SERVER_ELASTICSEARCH_CA=/usr/share/elastic-agent/fleet/ca.crt
      - FLEET_SERVER_ELASTICSEARCH_CA_TRUSTED_FINGERPRINT=${FINGERPRINT}
      - FLEET_SERVER_SERVICE_TOKEN=${FLEET_3_SERVICE_TOKEN}
      - FLEET_SERVER_POLICY_ID=fleet-server-policy
      - FLEET_SERVER_HOST=0.0.0.0
      - FLEET_SERVER_PORT=8220
      - FLEET_URL=${FLEET_3_URL}
      - FLEET_CA=/usr/share/elastic-agent/fleet/ca.crt
      - FLEET_SERVER_TIMEOUT=${FLEET_SERVER_TIMEOUT}
    ports:
      - "8222:8220"
    depends_on:
      - visualizer
      - db
    volumes:
      - ./certs/fleet:/usr/share/elastic-agent/fleet
    networks:
      - project
  os_agent:
    container_name: linux-agent
    image: elastic/elastic-agent:9.1.0
    environment:
      - FLEET_ENROLL=1
      - FLEET_CA=/usr/share/elastic-agent/linux-agent/ca.crt
      - FLEET_URL=${LINUX_AGENT_FLEET_1_URL}
      - FLEET_URL=${LINUX_AGENT_FLEET_2_URL}
      - FLEET_ENROLLMENT_TOKEN=${LINUX_AGENT_ENROLLMENT_TOKEN}
    depends_on:
      - agent_manager_1
      - agent_manager_2
      - agent_manager_3
    volumes:
      - ./certs/fleet/ca.crt:/usr/share/elastic-agent/linux-agent/ca.crt
      - /var/lib/elastic-agent:/var/lib/elastic-agent
      - /proc:/hostfs/proc:ro
      - /sys:/hostfs/sys:ro
      - /var/log:/hostfs/var/log:ro
    networks:
      - project
networks:
  project:
    driver: bridge
volumes:
  es_data:
  es_config:
